{"version":3,"sources":["components/NonActivePlayerCards.js","components/ActivePlayerCards.js","components/Tile.js","components/Board.js","components/ScoreBoard.js","components/Game.js","App.js","index.js"],"names":["NonActivePlayersCards","ActivePlayersCards","Tile","props","console","log","onClick","handleTileClick","tileIndex","tileInfo","Board","currentBoard","className","Array","map","i","trIndex","key","j","ScoreBoard","Game","useState","activePlayer","setActivePlayer","board","history","setHistory","setCurrentBoard","isInitialMount","useRef","useEffect","current","length","NonActivePlayerCards","beginningBoard","slice","betweenBoard","endBoard","newBoard","concat","ActivePlayerCards","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yLAMeA,EAJe,WAC1B,OAAS,+DCGEC,EAJY,WACvB,OAAS,2DCIEC,EALF,SAACC,GAEV,OADAC,QAAQC,IAAIF,GACJ,wBAAIG,QAAS,kBAAMH,EAAMI,gBAAgBJ,EAAMK,aAAaL,EAAMM,WCgB/DC,EAjBD,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,aAAcJ,EAAsB,EAAtBA,gBAE3B,OACI,+BACI,2BAAOK,UAAU,cACZ,YAAIC,MAAM,IAAIC,KAAI,SAACC,EAAGC,GAAJ,OACf,wBAAIC,IAAKF,GACJ,YAAIF,MAAM,IAAIC,KAAI,SAACI,EAAGV,GAAJ,OACf,kBAAC,EAAD,CAAMD,gBAAiBA,EAAiBU,IAAgB,EAAVD,EAAeR,EAAWA,UAAsB,EAAVQ,EAAeR,EAAWC,SAAUE,EAAwB,EAAVK,EAAeR,eCLlKW,EAJI,WACf,OAAS,6CCyDEC,EApDF,WAAO,IAAD,EACyBC,mBAAS,4BADlC,mBACRC,EADQ,KACMC,EADN,OAEeF,mBAAS,CAAC,CACpCG,MAAO,CACH,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAChC,GAAI,GAAI,GAAI,GAAI,GAChB,GAAI,GAAI,GAAI,GAAI,GAChB,GAAI,GAAI,GAAI,GAAI,GAChB,6CAAW,6CAAW,6CAAW,6CAAW,iDARrC,mBAERC,EAFQ,KAECC,EAFD,OAkByBL,mBAASI,EAAQ,GAAGD,OAlB7C,mBAkBRb,EAlBQ,KAkBMgB,EAlBN,KAmBTC,EAAiBC,kBAAO,GAqB9B,OARAC,qBAAU,WACFF,EAAeG,QACfH,EAAeG,SAAU,EAEzBJ,EAAgBF,EAAQA,EAAQO,OAAS,GAAGR,SAEjD,CAACC,IAGA,6BACI,8CAAoBH,GACpB,4BAAQhB,QAAS,WAAQoB,EAAW,GAAD,mBAAKD,GAAL,CAAc,CAAED,MAAOC,EAAQ,GAAGD,YAArE,mBACA,kBAACS,EAAD,MACA,kBAAC,EAAD,CAAO1B,gBAxBS,SAACQ,GACrB,GAAIJ,EAAaI,KAAOO,IAAmC,6BAAjBA,GAA2BP,EAAI,IAAyB,6BAAjBO,GAA2BP,EAAI,GAAK,CACvFQ,EAAT,6BAAjBD,EAA0C,6CAA6B,4BACvE,IAAIY,EAAmC,6BAAjBZ,EAA0BX,EAAawB,MAAM,EAAGpB,GAAKJ,EAAawB,MAAM,EAAGpB,EAAE,GAC/FqB,EAAiC,6BAAjBd,EAA0BX,EAAawB,MAAMpB,EAAI,EAAGA,EAAI,GAAKJ,EAAawB,MAAMpB,EAAE,EAAEA,GACpGsB,EAA6B,6BAAjBf,EAA0BX,EAAawB,MAAMpB,EAAI,EAAG,IAAMJ,EAAawB,MAAMpB,EAAE,EAAE,IAC7FuB,EAA6B,6BAAjBhB,EAA0BY,EAAeK,OAAO,GAAIH,EAAcd,EAAce,GAAYH,EAAeK,OAAOjB,EAAac,EAAa,GAAGC,GAC/JX,EAAW,GAAD,mBAAKD,GAAL,CAAc,CAAED,MAAOc,QAiBQ3B,aAAcA,IACvD,kBAAC,EAAD,MACA,kBAAC6B,EAAD,QCnCGC,MAhBf,WACE,OACE,yBAAK7B,UAAU,OACb,4BAAQA,UAAU,cAChB,wCAEF,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,eACf,yBAAKA,UAAU,YAEjB,kBAAC,EAAD,QCVN8B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.96cbf516.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst NonActivePlayersCards = () => {\r\n    return ( <div>TODO: Non-active player cards</div> );\r\n}\r\n \r\nexport default NonActivePlayersCards;","import React from 'react'\r\n\r\nconst ActivePlayersCards = () => {\r\n    return ( <div>TODO: Active player cards</div> );\r\n}\r\n \r\nexport default ActivePlayersCards;","import React from 'react'\r\n\r\nconst Tile = (props) => {\r\n    console.log(props)\r\n    return (<td onClick={() => props.handleTileClick(props.tileIndex)}>{props.tileInfo}</td>);\r\n}\r\n\r\nexport default Tile;","import React from 'react'\r\nimport Tile from './Tile'\r\n\r\nconst Board = ({ currentBoard, handleTileClick }) => {\r\n\r\n    return (\r\n        <table>\r\n            <tbody className=\"board-game\">\r\n                {[...Array(5)].map((i, trIndex) =>\r\n                    <tr key={i}>\r\n                        {[...Array(5)].map((j, tileIndex) =>\r\n                            <Tile handleTileClick={handleTileClick} key={(trIndex * 5) + tileIndex} tileIndex={(trIndex * 5) + tileIndex} tileInfo={currentBoard[(trIndex * 5) + tileIndex]}></Tile>\r\n                        )}\r\n                    </tr>\r\n                )}\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\n\r\nexport default Board;","import React from 'react'\r\n\r\nconst ScoreBoard = () => {\r\n    return ( <div>TODO: Score</div> );\r\n}\r\n \r\nexport default ScoreBoard;","import React, { useState, useEffect, useRef } from 'react';\r\nimport NonActivePlayerCards from './NonActivePlayerCards';\r\nimport ActivePlayerCards from './ActivePlayerCards';\r\nimport Board from './Board';\r\nimport ScoreBoard from './ScoreBoard';\r\n\r\n\r\n\r\nconst Game = () => {\r\n    const [activePlayer, setActivePlayer] = useState(\"üéÖüèΩ\")\r\n    const [history, setHistory] = useState([{\r\n        board: [\r\n            \"üéÖüèΩ\", \"üéÖüèΩ\", \"üéÖüèΩ\", \"üéÖüèΩ\", \"üéÖüèΩ\",\r\n            \"\", \"\", \"\", \"\", \"\",\r\n            \"\", \"\", \"\", \"\", \"\",\r\n            \"\", \"\", \"\", \"\", \"\",\r\n            \"üïµüèΩ‚Äç‚ôÄÔ∏è\", \"üïµüèΩ‚Äç‚ôÄÔ∏è\", \"üïµüèΩ‚Äç‚ôÄÔ∏è\", \"üïµüèΩ‚Äç‚ôÄÔ∏è\", \"üïµüèΩ‚Äç‚ôÄÔ∏è\",\r\n        ]\r\n        // board: [\r\n        //     \"0s\", \"1\", \"2\", \"3\", \"4\",\r\n        //     \"5\", \"6\", \"7\", \"8\", \"9\",\r\n        //     \"10\", \"11\", \"12s\", \"13\", \"14\", \r\n        //     \"15\", \"16\", \"17\", \"18\", \"19\",\r\n        //     \"20\", \"21\", \"22\", \"23\", \"24s\",\r\n        // ]\r\n    }]);\r\n    const [currentBoard, setCurrentBoard] = useState(history[0].board);\r\n    const isInitialMount = useRef(true);\r\n\r\n    const handleTileClick = (i) => {\r\n        if (currentBoard[i] === activePlayer && ((activePlayer === \"üéÖüèΩ\" && i < 20) || (activePlayer !== \"üéÖüèΩ\" && i > 4))) {\r\n            activePlayer === \"üéÖüèΩ\" ? setActivePlayer(\"üïµüèΩ‚Äç‚ôÄÔ∏è\") : setActivePlayer(\"üéÖüèΩ\");\r\n            let beginningBoard = (activePlayer === \"üéÖüèΩ\" ? currentBoard.slice(0, i) : currentBoard.slice(0, i-5));\r\n            let betweenBoard = (activePlayer === \"üéÖüèΩ\" ? currentBoard.slice(i + 1, i + 5) : currentBoard.slice(i-4,i));\r\n            let endBoard = (activePlayer === \"üéÖüèΩ\" ? currentBoard.slice(i + 6, 25) : currentBoard.slice(i+1,25));\r\n            let newBoard = (activePlayer === \"üéÖüèΩ\" ? beginningBoard.concat(\"\", betweenBoard, activePlayer, endBoard) : beginningBoard.concat(activePlayer,betweenBoard,\"\",endBoard));\r\n            setHistory([...history, { board: newBoard }]);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (isInitialMount.current) {\r\n            isInitialMount.current = false;\r\n        } else {\r\n            setCurrentBoard(history[history.length - 1].board);\r\n        }\r\n    }, [history]);\r\n\r\n    return (\r\n        <div>\r\n            <h3>Active Player: {activePlayer}</h3>\r\n            <button onClick={() => { setHistory([...history, { board: history[0].board }]) }}>Reset the board</button>\r\n            <NonActivePlayerCards></NonActivePlayerCards>\r\n            <Board handleTileClick={handleTileClick} currentBoard={currentBoard}></Board>\r\n            <ScoreBoard></ScoreBoard>\r\n            <ActivePlayerCards></ActivePlayerCards>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Game;","import React from 'react';\nimport './App.css';\nimport Game from './components/Game';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Onitama</h1>\n      </header>\n      <div className=\"coffee-container\">\n        <div className=\"coffee-cup\"></div>\n        <div className=\"handle\"></div>\n      </div>\n      <Game>\n      </Game>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}